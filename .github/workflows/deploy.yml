name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      # 1. Ï≤¥ÌÅ¨ÏïÑÏõÉ
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Node.js ÏÑ§Ï†ï Î∞è ÎπåÎìú ÌôïÏù∏
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build verification
        run: |
          echo "‚úÖ Dependencies installed successfully"
          echo "üì¶ Package verification complete"

      # 3. Docker Ïù¥ÎØ∏ÏßÄ ÎπåÎìú
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/softsoul-api:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/softsoul-api:latest ${{ secrets.DOCKER_USERNAME }}/softsoul-api:${{ github.sha }}

      # 4. Docker Hub Î°úÍ∑∏Ïù∏
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5. Docker HubÏóê Ìë∏Ïãú
      - name: Push Docker image to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/softsoul-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/softsoul-api:${{ github.sha }}

      # 6. Kubernetes ÏÑ§Ï†ï
      - name: Set up Kubernetes config
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Verify Kubernetes connection
        run: kubectl cluster-info

      # 7. Kubernetes Î∞∞Ìè¨ YAML ÏÉùÏÑ±
      - name: Generate Deployment YAML
        run: |
          cat <<EOF > k8s/deployment-generated.yaml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: softsoul-api
            labels:
              app: softsoul-api
          spec:
            replicas: 2
            selector:
              matchLabels:
                app: softsoul-api
            template:
              metadata:
                labels:
                  app: softsoul-api
              spec:
                containers:
                - name: softsoul-api
                  image: ${{ secrets.DOCKER_USERNAME }}/softsoul-api:latest
                  imagePullPolicy: Always
                  ports:
                  - containerPort: 80
                    protocol: TCP
                  env:
                  - name: NODE_ENV
                    value: "production"
                  - name: PORT
                    value: "80"
                  - name: NOTION_API_KEY
                    value: "${{ secrets.NOTION_API_KEY }}"
                  - name: CUSTOMER_DATA
                    value: "${{ secrets.CUSTOMER_DATA }}"
                  - name: EXCHANGE_DATA
                    value: "${{ secrets.EXCHANGE_DATA }}"
                  - name: EXTERNAL_ID_DATA
                    value: "${{ secrets.EXTERNAL_ID_DATA }}"
                  - name: FUND_DATA
                    value: "${{ secrets.FUND_DATA }}"
                  - name: LEVEL_DATABASE
                    value: "${{ secrets.LEVEL_DATABASE }}"
                  - name: MYANMAR_DELIVERY_DATA
                    value: "${{ secrets.MYANMAR_DELIVERY_DATA }}"
                  - name: PRODUCT_DATA
                    value: "${{ secrets.PRODUCT_DATA }}"
                  - name: SHIPPING_DATA
                    value: "${{ secrets.SHIPPING_DATA }}"
                  - name: TRANSACTION_DATABASE
                    value: "${{ secrets.TRANSACTION_DATABASE }}"
                  - name: VENDOR_DATA
                    value: "${{ secrets.VENDOR_DATA }}"
                  - name: WAREHOUSE_DATA
                    value: "${{ secrets.WAREHOUSE_DATA }}"
                  resources:
                    requests:
                      cpu: "100m"
                      memory: "128Mi"
                    limits:
                      cpu: "200m"
                      memory: "256Mi"
                  livenessProbe:
                    httpGet:
                      path: /api/products
                      port: 80
                    initialDelaySeconds: 30
                    periodSeconds: 10
                    timeoutSeconds: 3
                    failureThreshold: 3
                  readinessProbe:
                    httpGet:
                      path: /api/products
                      port: 80
                    initialDelaySeconds: 10
                    periodSeconds: 5
                    timeoutSeconds: 3
                    failureThreshold: 3
                restartPolicy: Always
          EOF

      # 8. Kubernetes Î∞∞Ìè¨ Î∞è ÏóÖÎç∞Ïù¥Ìä∏
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/deployment-generated.yaml
          kubectl rollout status deployment/softsoul-api -w --timeout=5m

      # 9. Î∞∞Ìè¨ ÌôïÏù∏
      - name: Verify Deployment
        run: |
          echo "‚úÖ Deployment completed successfully"
          kubectl get deployments softsoul-api
          kubectl get services softsoul-api-service
          kubectl get pods -l app=softsoul-api
          
      - name: Deployment Summary
        run: |
          echo "============================================"
          echo "üöÄ Deployment Summary"
          echo "============================================"
          echo "üì¶ Image: ${{ secrets.DOCKER_USERNAME }}/softsoul-api:latest"
          echo "üîñ SHA: ${{ github.sha }}"
          echo "üåê Service: softsoul-api-service"
          echo "üìç Endpoint: /softsoul_api"
          echo "============================================"

